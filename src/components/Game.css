@keyframes pulse {
  0%, 100% { 
    opacity: 0.7;
    text-shadow: 0 0 10px currentColor;
    transform: scale(1);
  }
  50% { 
    opacity: 1;
    text-shadow: 0 0 25px currentColor, 0 0 35px currentColor;
    transform: scale(1.05);
  }
}

@keyframes gridPulse {
  0% {
    filter: brightness(1) contrast(1) saturate(1);
    transform: scale(1);
    box-shadow: 0 0 0 rgba(0, 255, 159, 0);
  }
  20% {
    filter: brightness(2) contrast(1.5) saturate(1.5);
    transform: scale(1.05);
    box-shadow: 0 0 50px rgba(0, 255, 159, 0.5);
  }
  40% {
    filter: brightness(1.8) contrast(1.3) saturate(1.3);
    transform: scale(1.03);
    box-shadow: 0 0 40px rgba(0, 255, 159, 0.4);
  }
  60% {
    filter: brightness(1.6) contrast(1.2) saturate(1.2);
    transform: scale(1.02);
    box-shadow: 0 0 30px rgba(0, 255, 159, 0.3);
  }
  100% {
    filter: brightness(1) contrast(1) saturate(1);
    transform: scale(1);
    box-shadow: 0 0 0 rgba(0, 255, 159, 0);
  }
}

@keyframes rotateGrid {
  0% {
    transform: rotate(0deg);
  }
  5% {
    transform: rotate(10deg);
  }
  15% {
    transform: rotate(170deg);
  }
  20% {
    transform: rotate(190deg);
  }
  25% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(180deg);
  }
}

@keyframes warningFlash {
  0% {
    box-shadow: 0 0 30px rgba(255, 233, 0, 0.2);
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 50px rgba(255, 233, 0, 0.6);
    transform: scale(1.02);
  }
  100% {
    box-shadow: 0 0 30px rgba(255, 233, 0, 0.2);
    transform: scale(1);
  }
}

@keyframes warningText {
  0% {
    opacity: 0;
    transform: translate(-50%, calc(-50% - 20px));
  }
  20% {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
  80% {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, calc(-50% + 20px));
  }
}

.game-container {
  position: absolute;
  width: 100%;
  height: 100vh;
  height: 100dvh;
  top: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  position: relative;
  overflow: hidden;
}

.game-container::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 150%;
  height: 150%;
  transform: translate(-50%, -50%);
  background: radial-gradient(circle, rgba(0, 255, 159, 0.1) 0%, transparent 70%);
  pointer-events: none;
  animation: ambientGlow 8s ease-in-out infinite;
}

@keyframes ambientGlow {
  0%, 100% { opacity: 0.5; }
  50% { opacity: 0.8; }
}

.game-header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
  pointer-events: none;
}

.game-hud {
  position: absolute;
  top: 30px;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  gap: 300px;
  pointer-events: none;
  z-index: 5;
  font-size: 32px;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 2px;
}

.score, .timer {
  min-width: 200px;
  padding: 12px 20px;
  border-radius: 12px;
  background: rgba(26, 26, 46, 0.95);
  backdrop-filter: blur(10px);
  border: 2px solid rgba(0, 255, 159, 0.3);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 6px;
  position: relative;
  overflow: visible;
  box-shadow: 
    0 4px 20px rgba(0, 255, 159, 0.2),
    0 0 30px rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
}

/* Add labels above score and timer */
.score::before,
.timer::before {
  content: attr(data-label);
  font-size: 0.7em;
  text-transform: uppercase;
  letter-spacing: 2px;
  color: rgba(255, 255, 255, 0.7);
  margin-bottom: 2px;
}

.score-value {
  font-size: 1.4em;
  font-weight: bold;
  color: #00FF9F;
  text-shadow: 
    0 0 10px rgba(0, 255, 159, 0.5),
    0 0 20px rgba(0, 255, 159, 0.3);
  letter-spacing: 0.5px;
}

.score:hover, .timer:hover {
  transform: translateY(2px);
  border-color: rgba(0, 255, 159, 0.4);
  box-shadow: 
    0 6px 25px rgba(0, 255, 159, 0.25),
    0 0 35px rgba(0, 0, 0, 0.3);
}

.timer.safe {
  color: #00FF9F;
}

.timer.warning {
  color: #FFE900;
  animation: pulse 1s ease-in-out infinite;
}

.timer.danger {
  color: #FF1177;
  animation: pulse 0.5s ease-in-out infinite;
}

.board-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  z-index: 1;
}

.game-board {
  position: relative;
  width: 100%;
  max-width: 1000px;
  height: 800px;
  transform-style: preserve-3d;
  will-change: transform;
}

/* Animation classes */
.tile-placed {
  animation: tilePlace 0.3s ease-out;
}

.tile-removed {
  animation: tileRemove 0.5s ease-in forwards;
}

.grid-full {
  animation: gridClearPulse 2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Update score container to be flex column */
.score-increment-container {
  position: absolute;
  top: -20px;
  right: 10px;
  width: 100px;
  height: 60px;
  pointer-events: none;
  overflow: visible;
}

.score-increment {
  position: absolute;
  top: 0;
  right: 0;
  color: #00FF9F;
  font-size: 1.2em;
  font-weight: bold;
  text-shadow: 
    0 0 10px rgba(0, 255, 159, 0.8),
    0 0 20px rgba(0, 255, 159, 0.4);
  animation: scoreIncrement 1s ease-out forwards;
  white-space: nowrap;
  z-index: 100;
  background: rgba(26, 26, 46, 0.8);
  padding: 4px 8px;
  border-radius: 8px;
  border: 1px solid rgba(0, 255, 159, 0.3);
}

@keyframes scoreIncrement {
  0% {
    transform: translate(0, 0) scale(0.8);
    opacity: 0;
  }
  20% {
    transform: translate(0, -20px) scale(1.2);
    opacity: 1;
  }
  80% {
    transform: translate(0, -40px) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(0, -60px) scale(0.8);
    opacity: 0;
  }
}

/* Update rotation hint text */
.rotation-hint {
  color: #00FF9F;
  font-size: 16px;
  text-transform: uppercase;
  letter-spacing: 1px;
  margin-bottom: 20px;
  text-align: center;
}

/* Update warning flash animation */
.rotation-warning {
  animation: pulse 0.4s ease-in-out 3;
  will-change: transform;
  /* Prevent animation from affecting child elements */
  transform-style: preserve-3d;
}

.rotation-text {
  position: absolute;
  top: 15%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #FFE900;
  font-size: 32px;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 3px;
  text-shadow: 0 0 15px #FFE900, 0 0 25px #FFE900;
  pointer-events: none;
  z-index: 2;
  padding: 15px 30px;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  backdrop-filter: blur(5px);
  animation: warningText 1.4s ease-in-out forwards;
}

/* Adjust power-up indicator position */
.power-up-indicator {
  position: static;
  top: auto;
  right: auto;
  display: flex;
  gap: 10px;
  z-index: 2;
}

.power-up-timer {
  background: rgba(0, 255, 159, 0.2);
  padding: 5px 10px;
  border-radius: 5px;
  color: #00FF9F;
  font-size: 14px;
  display: flex;
  align-items: center;
  gap: 5px;
  backdrop-filter: blur(8px);
}

.power-up-timer.active {
  animation: pulse 1s infinite;
}

.power-up-guide {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 20px;
  background: rgba(0, 255, 159, 0.1);
  padding: 10px 20px;
  border-radius: 8px;
  border: 1px solid rgba(0, 255, 159, 0.3);
}

.power-up-item {
  display: flex;
  align-items: center;
  gap: 8px;
  color: #fff;
  font-size: 14px;
}

.power-up-item span:first-child {
  font-size: 18px;
}

/* Add these styles to your existing Game.css */

.tutorial-message {
  position: fixed;
  z-index: 5;
  padding: 20px;
  background: rgba(26, 26, 46, 0.95);
  border: 2px solid #00FF9F;
  border-radius: 10px;
  box-shadow: 0 0 20px rgba(0, 255, 159, 0.3);
  color: white;
  max-width: 300px;
  animation: fadeIn 0.3s ease-out;
}

.tutorial-message.center {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.tutorial-message.right {
  top: 50%;
  right: 20px;
  transform: translateY(-50%);
}

.tutorial-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
}

.tutorial-content p {
  margin: 0;
  text-align: center;
  line-height: 1.4;
}

.tutorial-next-button {
  background: #00FF9F;
  color: #1a1a2e;
  border: none;
  padding: 8px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.2s ease;
}

.tutorial-next-button:hover {
  background: #00CC7F;
  transform: scale(1.05);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.game-controls {
  position: absolute;
  top: 20px;
  right: 20px;
  z-index: 10;
}

.skip-tutorial-button {
  position: absolute;
  top: 20px;
  right: 20px;
  padding: 10px 20px;
  background: rgba(255, 77, 109, 0.2);
  border: 2px solid #FF4D6D;
  border-radius: 8px;
  color: #FF4D6D;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
  z-index: 100;
}

.skip-tutorial-button:hover {
  background: rgba(255, 77, 109, 0.3);
  transform: scale(1.05);
}

.skip-tutorial-button:active {
  transform: scale(0.95);
}

.game-statistics {
  position: absolute;
  bottom: 20px;
  left: 20px;
  color: #00FF9F;
  font-size: 14px;
}

/* Update exit button positioning */
.exit-button {
  position: fixed;
  top: 20px;  /* Changed from 95px to 20px */
  right: 20px;
  padding: 8px 16px;
  border: 2px solid #FF4D6D;
  background: rgba(255, 77, 109, 0.1);
  color: #FF4D6D;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 14px;
  display: flex;
  align-items: center;
  gap: 5px;
  z-index: 10;
}

.exit-button:hover {
  background: rgba(255, 77, 109, 0.2);
  transform: scale(1.05);
}

.exit-button::before {
  font-size: 16px;
}

/* Remove board-controls class since we're not using it for the exit button anymore */
.board-controls {
  display: none;  /* Hide the container since we're not using it */
}

.timer-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
}

/* Enhanced grid clear animations */
@keyframes gridClearPulse {
  0% {
    filter: brightness(1) saturate(1) blur(0);
    transform: scale(1) rotate(0deg);
    box-shadow: 0 0 0 rgba(0, 255, 159, 0);
  }
  10% {
    filter: brightness(3) saturate(2) blur(2px);
    transform: scale(1.12) rotate(-1deg);
    box-shadow: 
      0 0 100px rgba(0, 255, 159, 0.8),
      0 0 200px rgba(0, 255, 159, 0.4);
  }
  30% {
    filter: brightness(2.5) saturate(1.8) blur(1px);
    transform: scale(1.08) rotate(1deg);
    box-shadow: 
      0 0 80px rgba(0, 255, 159, 0.6),
      0 0 160px rgba(0, 255, 159, 0.3);
  }
  100% {
    filter: brightness(1) saturate(1) blur(0);
    transform: scale(1) rotate(0deg);
    box-shadow: 0 0 0 rgba(0, 255, 159, 0);
  }
}

@keyframes gridClearRipple {
  0% {
    clip-path: circle(0% at center);
    background: radial-gradient(
      circle,
      rgba(0, 255, 159, 0.4) 0%,
      rgba(0, 255, 159, 0.2) 30%,
      transparent 70%
    );
  }
  50% {
    clip-path: circle(100% at center);
    background: radial-gradient(
      circle,
      rgba(0, 255, 159, 0.6) 0%,
      rgba(0, 255, 159, 0.3) 40%,
      transparent 80%
    );
  }
  100% {
    clip-path: circle(150% at center);
    background: radial-gradient(
      circle,
      rgba(0, 255, 159, 0) 0%,
      rgba(0, 255, 159, 0) 50%,
      transparent 90%
    );
  }
}

@keyframes gridClearLines {
  0% {
    opacity: 0;
    background-size: 100% 4px, 4px 100%;
    background-position: -100% 0, 0 -100%;
  }
  50% {
    opacity: 1;
    background-size: 100% 4px, 4px 100%;
    background-position: 200% 0, 0 200%;
  }
  100% {
    opacity: 0;
    background-size: 100% 4px, 4px 100%;
    background-position: 200% 0, 0 200%;
  }
}

/* Add new grid clear effect containers */
.grid-clear-effects {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.grid-clear-ripple {
  position: absolute;
  inset: -20%;
  animation: gridClearRipple 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.grid-clear-lines {
  position: absolute;
  inset: 0;
  background-image: 
    linear-gradient(90deg, rgba(0, 255, 159, 0.5) 50%, transparent 50%),
    linear-gradient(0deg, rgba(0, 255, 159, 0.5) 50%, transparent 50%);
  background-repeat: no-repeat;
  animation: gridClearLines 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.grid-clear-glitch {
  position: absolute;
  inset: 0;
  background: repeating-linear-gradient(
    90deg,
    rgba(0, 255, 159, 0.1) 0%,
    rgba(0, 255, 159, 0.2) 20%,
    rgba(0, 255, 159, 0.1) 40%
  );
  mix-blend-mode: overlay;
  opacity: 0;
  animation: glitchEffect 1s ease-out forwards;
}

@keyframes glitchEffect {
  0%, 100% { opacity: 0; transform: translateX(0); }
  10%, 90% { opacity: 0.8; transform: translateX(-5px); }
  20%, 80% { opacity: 0.6; transform: translateX(5px); }
  30%, 70% { opacity: 0.9; transform: translateX(-3px); }
  40%, 60% { opacity: 0.7; transform: translateX(3px); }
  50% { opacity: 1; transform: translateX(0); }
}

/* Add chromatic aberration effect */
.grid-clear-chromatic {
  position: absolute;
  inset: 0;
  opacity: 0;
  animation: chromaticEffect 1.5s ease-out forwards;
}

.grid-clear-chromatic::before,
.grid-clear-chromatic::after {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle, rgba(0, 255, 159, 0.3) 0%, transparent 70%);
  mix-blend-mode: screen;
}

.grid-clear-chromatic::before {
  filter: hue-rotate(90deg);
  transform: translate(-5px, 0);
}

.grid-clear-chromatic::after {
  filter: hue-rotate(-90deg);
  transform: translate(5px, 0);
}

@keyframes chromaticEffect {
  0% { opacity: 0; }
  20% { opacity: 1; }
  80% { opacity: 1; }
  100% { opacity: 0; }
}

/* Score text styling */
.score {
  color: #00FF9F;
  font-size: 32px;
  font-weight: bold;
  text-shadow: 
    0 0 10px rgba(0, 255, 159, 0.5),
    0 0 20px rgba(0, 255, 159, 0.3);
  letter-spacing: 2px;
}

:root {
  --theme-accent: #00FF9F;
  --theme-secondary: #00FFFF;
  --theme-background: #1a1a2e;
}

/* Update the matchGlow animation to use CSS variables */
@keyframes matchGlow {
  0% { filter: drop-shadow(0 0 5px var(--theme-accent)); }
  50% { filter: drop-shadow(0 0 15px var(--theme-accent)); }
  100% { filter: drop-shadow(0 0 5px var(--theme-accent)); }
}

/* Update the primary button style */
.cyberpunk-button.primary {
  background: linear-gradient(45deg, var(--theme-accent), var(--theme-secondary));
  color: var(--theme-background);
  font-weight: bold;
}

.level-complete__message {
  color: #ffffff;
  font-size: 18px;
  margin: 20px 0;
  line-height: 1.5;
  opacity: 0.9;
}

/* Update French Bulldog positioning specifically for the game context */
.game-container .french-bulldog {
  position: absolute;
  top: 160px !important; /* Force the top position */
  left: 20px;
  z-index: 90;
  transform: none !important; /* Remove float animation in game */
}

/* Ensure speech bubble doesn't get cut off */
.game-container .speech-bubble {
  z-index: 91;
}

/* Add CSS custom properties for each popup type */
.score-popup[data-type='score'] {
  --start-y: 20px;
  --mid-y: -20px;
  --end-y: -40px;
  --final-y: -60px;
}

.score-popup[data-type='quick'] {
  --start-y: 0;
  --mid-y: -30px;
  --end-y: -50px;
  --final-y: -70px;
  --start-rotate: -5deg;
  --mid-rotate: 5deg;
  --end-rotate: -3deg;
}

.score-popup[data-type='combo'] {
  --start-y: 0;
  --start-scale: 0.5;
  --mid-y: -40px;
  --mid-scale: 1.4;
  --end-y: -50px;
  --end-scale: 1.2;
  --final-y: -80px;
  --final-scale: 0.8;
  --final-blur: 2px;
}

.score-popup[data-type='clear'] {
  --start-y: 0;
  --start-scale: 0.8;
  --start-blur: 4px;
  --mid-y: -30px;
  --mid-scale: 1.3;
  --mid-blur: 0px;
  --end-y: -60px;
  --end-scale: 1.1;
  --end-blur: 0px;
  --final-y: -90px;
  --final-scale: 0.9;
  --final-blur: 2px;
}