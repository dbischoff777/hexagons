.particles-container {
  position: fixed;
  inset: 0;
  width: 100vw;
  height: 100vh;
  height: 100dvh;
  z-index: 0;
  pointer-events: none;
  overflow: hidden;
  background: var(--background-gradient, linear-gradient(180deg, 
    rgba(13, 13, 26, 0.95) 0%,
    rgba(13, 13, 26, 0.98) 100%
  ));
}

.particles-container canvas {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}

.hex-puzzle-mode {
  position: fixed;
  inset: 0;
  width: 100vw;
  height: 100vh;
  height: 100dvh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  z-index: 1;
  background: transparent;

  /* Theme variables */
  --hex-color: var(--primary-color, #00FF9F);
  --accent-color: var(--accent-color, #FF1177);
  --background-dark: rgba(13, 13, 26, 0.6);
  --glow-opacity: 0.2;
  --border-opacity: 0.3;
}

/* Single ambient glow effect */
.hex-puzzle-mode::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 150%;
  height: 150%;
  transform: translate(-50%, -50%);
  background: radial-gradient(
    circle at center,
    rgba(var(--hex-color), 0.05) 0%,
    transparent 70%
  );
  pointer-events: none;
  animation: ambientGlow 8s ease-in-out infinite;
  z-index: 1;
  mix-blend-mode: screen;
}

/* Remove ::after since we're using Particles component */
.hex-puzzle-mode::after {
  display: none;
}

@keyframes ambientGlow {
  0%, 100% { 
    opacity: 0.5;
    transform: translate(-50%, -50%) scale(1);
  }
  50% { 
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1.1);
  }
}

/* Add completion overlay enhancement */
.hex-puzzle-mode.completed::before {
  background: 
    radial-gradient(circle at center, 
      rgba(0, 255, 159, 0.2) 0%, 
      rgba(26, 26, 46, 0) 70%
    ),
    radial-gradient(circle at 30% 20%, 
      rgba(0, 255, 159, 0.15) 0%, 
      transparent 50%
    ),
    radial-gradient(circle at 70% 80%, 
      rgba(0, 255, 159, 0.15) 0%, 
      transparent 50%
    );
  animation: completionGlow 2s ease-in-out infinite;
}

@keyframes completionGlow {
  0%, 100% { 
    opacity: 0.5;
    transform: translate(-50%, -50%) scale(1);
  }
  50% { 
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1.05);
  }
}

.hex-puzzle-mode canvas {
  cursor: pointer;
  /* Only scale down when viewport is too small */
  @media (max-width: 1200px), (max-height: 800px) {
    max-width: min(100vh - 100px, 100vw - 100px);
    max-height: min(100vh - 100px, 100vw - 100px);
    width: auto;
    height: auto; 
  }
  object-fit: contain;
  transform-origin: center;
  transition: transform 0.2s ease;
}

.hex-puzzle-exit-button {
  position: absolute;
  top: 20px;
  right: 20px;
  padding: 10px 20px;
  background: rgba(var(--accent-color), 0.1);
  backdrop-filter: blur(10px);
  border: 2px solid rgba(var(--accent-color), 0.3);
  box-shadow: 
    0 0 15px rgba(var(--accent-color), 0.1),
    0 0 20px rgba(0, 0, 0, 0.2);
  color: var(--accent-color);
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  transition: all 0.3s ease;
  z-index: 100;
}

.hex-puzzle-exit-button:hover {
  background: rgba(var(--accent-color), 0.2);
  border-color: rgba(var(--accent-color), 0.4);
  box-shadow: 
    0 0 20px rgba(var(--accent-color), 0.2),
    0 0 25px rgba(0, 0, 0, 0.3);
}

.puzzle-container {
  display: flex;
  gap: 20px;
  align-items: center;
}

.hex-puzzle-next-tiles-container {
  position: absolute;
  width: clamp(80px, 12vw, 120px);
  right: max(20px, 3vw);
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  gap: clamp(8px, 1.2vh, 15px);
  align-items: center;
  pointer-events: all;
  z-index: 100;
  background: var(--background-dark);
  backdrop-filter: blur(10px);
  padding: clamp(10px, 2vh, 20px);
  border-radius: clamp(10px, 2vw, 20px);
  border: 2px solid rgba(var(--hex-color), 0.2);
  box-shadow: 
    0 4px 20px rgba(var(--hex-color), 0.1),
    0 0 30px rgba(0, 0, 0, 0.2);
  --scale: min(
    1,
    min(
      calc((100vw - 40px) / 1200),
      calc((100vh - 40px) / 800)
    )
  );
}

.hex-puzzle-next-tiles {
  display: flex;
  flex-direction: column;
  gap: clamp(5px, 2.5vh, 10px);
  align-items: center;
}

.hex-puzzle-next-tile {
  position: relative;
  width: clamp(60px, 10vw, 100px);
  height: clamp(60px, 10vw, 100px);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  cursor: pointer;
  border-radius: 50%;
  background: var(--background-dark);
  border: 2px solid rgba(var(--hex-color), 0.2);
  box-shadow: 
    0 0 10px rgba(var(--hex-color), 0.1),
    0 0 20px rgba(0, 0, 0, 0.2);
  transform: scale(var(--scale, 1));
  --scale: 1;
}

.hex-puzzle-next-tile:hover {
  --scale: 1.05;
  background: rgba(13, 13, 26, 0.7);
  border-color: rgba(var(--hex-color), 0.4);
  box-shadow: 
    0 0 15px rgba(var(--hex-color), 0.15),
    0 0 25px rgba(0, 0, 0, 0.25);
}

.hex-puzzle-next-tile.selected {
  --scale: 1.1;
  background: rgba(13, 13, 26, 0.8);
  border-color: rgba(var(--hex-color), 0.5);
  box-shadow: 
    0 0 20px rgba(var(--hex-color), 0.2),
    0 0 30px rgba(0, 0, 0, 0.3);
}

.hex-puzzle-next-tile canvas {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  pointer-events: none;
  transform: scale(var(--scale));
  box-shadow: 0 0 clamp(8px, 1.5vw, 15px) rgba(0, 255, 159, 0.2);
  pointer-events: none;
  transition: transform 0.2s ease;
}

/* Add tile animations */
@keyframes tilePlace {
  0% {
    transform: scale(1.3) rotate(-10deg);
    filter: brightness(2);
    box-shadow: 
      0 0 30px rgba(var(--hex-color), 0.6),
      0 0 60px rgba(var(--hex-color), 0.3);
  }
  50% {
    transform: scale(0.9) rotate(5deg);
    filter: brightness(1.5);
    box-shadow: 
      0 0 20px rgba(var(--hex-color), 0.4),
      0 0 40px rgba(var(--hex-color), 0.2);
  }
  100% {
    transform: scale(1) rotate(0);
    filter: brightness(1);
    box-shadow: 
      0 0 10px rgba(var(--hex-color), 0.2),
      0 0 20px rgba(var(--hex-color), 0.1);
  }
}

.tile-placed {
  animation: tilePlace 0.3s ease-out;
}

.hex-puzzle-start-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 15px 30px;
  font-size: 24px;
  background: rgba(var(--hex-color), 0.2);
  border: 2px solid var(--hex-color);
  color: var(--hex-color);
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 10;
}

.hex-puzzle-start-button:hover {
  background: rgba(var(--hex-color), 0.3);
  transform: translate(-50%, -50%) scale(1.05);
  box-shadow: 0 0 20px rgba(var(--hex-color), 0.4);
}

.modal-button {
  padding: 10px 20px;
  border-radius: 4px;
  font-size: 16px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.modal-button.cancel {
  background: rgba(var(--hex-color), 0.1);
  border: 2px solid var(--hex-color);
  color: var(--hex-color);
}

.modal-button.cancel:hover {
  background: rgba(var(--hex-color), 0.2);
  box-shadow: 0 0 15px rgba(var(--hex-color), 0.3);
}

.modal-button.confirm {
  background: rgba(var(--accent-color), 0.1);
  border: 2px solid var(--accent-color);
  color: var(--accent-color);
}

.hex-puzzle-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: min(20px, 2vh);
  width: 100%;
  max-width: min(1200px, 95vw);
  margin: 0 auto;
  z-index: 1;
  height: 100vh;
  justify-content: center;
}

.hex-puzzle-board-container {
  position: relative;
  width: 100%;
  max-width: min(95vw, 95vh);
  aspect-ratio: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: auto;
  transform: scale(var(--scale, 1));
  transition: transform 0.3s ease;
  background: transparent;
  --scale: min(
    1,
    min(
      calc((100vw - max(40px, 5vw)) / 800),
      calc((100vh - max(40px, 10vh)) / 800)
    )
  );
}

/* Add mobile-specific scaling */
@media (max-width: 768px), (max-height: 768px) {
  .hex-puzzle-board-container {
    --scale: min(
      1,
      min(
        calc((100vw - 20px) / 800),
        calc((100vh - 100px) / 800)
      )
    );
  }

  .hex-puzzle-next-tiles-container {
    --scale: min(
      1,
      min(
        calc((100vw - 20px) / 1200),
        calc((100vh - 100px) / 800)
      )
    );
    right: 10px;
    padding: 10px;
    gap: 8px;
  }

  .hex-puzzle-next-tile {
    width: clamp(50px, 8vw, 80px);
    height: clamp(50px, 8vw, 80px);
  }
}

/* Add smaller device scaling */
@media (max-width: 480px), (max-height: 480px) {
  .hex-puzzle-board-container {
    --scale: min(
      1,
      min(
        calc((100vw - 10px) / 800),
        calc((100vh - 80px) / 800)
      )
    );
  }

  .hex-puzzle-next-tiles-container {
    --scale: min(
      1,
      min(
        calc((100vw - 10px) / 1200),
        calc((100vh - 80px) / 800)
      )
    );
  }
}

.hex-puzzle-game-board {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.hex-puzzle-canvas-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  aspect-ratio: 1;
  z-index: 2; /* Above particles but below UI elements */
}

.hex-puzzle-canvas-wrapper canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
  background: transparent;
}

.hex-puzzle-canvas-wrapper canvas:last-child {
  z-index: 2; /* Game canvas */
  pointer-events: all;
}

/* Update score positioning to match Game.css */
.hex-puzzle-mode .score {
  position: fixed;
  left: 2vw;
  top: 7.3rem;
  transform: none;
  min-width: min(280px, 25vw);
  padding: min(12px, 1.5vh) min(20px, 2vw);
  border-radius: min(12px, 1.5vh);
  background: var(--background-dark);
  backdrop-filter: blur(10px);
  border: 2px solid rgba(var(--hex-color), 0.2);
  box-shadow: 
    0 4px 20px rgba(var(--hex-color), 0.1),
    0 0 30px rgba(0, 0, 0, 0.2);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: min(6px, 0.8vh);
  overflow: visible;
  transition: all 0.3s ease;
  z-index: 100;
}

.hex-puzzle-mode .score::before {
  content: attr(data-label);
  font-size: 0.7em;
  text-transform: uppercase;
  letter-spacing: 2px;
  color: rgba(255, 255, 255, 0.7);
  margin-bottom: 2px;
}

.hex-puzzle-mode .score-value {
  font-size: min(1.4em, 4vw);
  font-weight: bold;
  color: var(--hex-color);
  text-shadow: 
    0 0 10px rgba(var(--hex-color), 0.5),
    0 0 20px rgba(var(--hex-color), 0.3);
  letter-spacing: 0.5px;
}

.hex-puzzle-mode .score:hover {
  background: rgba(13, 13, 26, 0.7);
  border-color: rgba(var(--hex-color), 0.3);
  box-shadow: 
    0 6px 25px rgba(var(--hex-color), 0.15),
    0 0 35px rgba(0, 0, 0, 0.25);
}

/* Ensure level progress is positioned correctly */
.hex-puzzle-mode .level-progress {
  position: fixed;
  top: 0;
  left: 2vw;
  margin-top: 0.625rem;
  z-index: 100;
  min-width: min(280px, 25vw);
  background: var(--background-dark);
  backdrop-filter: blur(10px);
  border: 2px solid rgba(var(--hex-color), 0.2);
  box-shadow: 
    0 4px 20px rgba(var(--hex-color), 0.1),
    0 0 30px rgba(0, 0, 0, 0.2);
}

/* Add responsive adjustments */
@media (max-width: 768px) {
  .hex-puzzle-mode .score,
  .hex-puzzle-mode .level-progress {
    min-width: min(240px, 30vw);
  }

  .hex-puzzle-mode .score-value {
    font-size: min(1.2em, 5vw);
  }
}

@media (max-width: 480px) {
  .hex-puzzle-mode .score,
  .hex-puzzle-mode .level-progress {
    min-width: min(200px, 40vw);
  }
}

/* Add glow effect for correctly placed pieces */
.hex-puzzle-mode .piece-correct {
  filter: brightness(1.2);
  box-shadow: 
    0 0 20px rgba(var(--hex-color), 0.4),
    0 0 40px rgba(var(--hex-color), 0.2);
  animation: correctPieceGlow 2s ease-in-out infinite;
}

@keyframes correctPieceGlow {
  0%, 100% {
    filter: brightness(1.2);
    box-shadow: 
      0 0 20px rgba(var(--hex-color), 0.4),
      0 0 40px rgba(var(--hex-color), 0.2);
  }
  50% {
    filter: brightness(1.4);
    box-shadow: 
      0 0 30px rgba(var(--hex-color), 0.6),
      0 0 60px rgba(var(--hex-color), 0.3);
  }
}

.completion-stats {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1.5rem;
  margin: 1.5rem 0;
  padding: 1rem;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 12px;
  border: 1px solid rgba(0, 255, 159, 0.2);
}

.completion-stat {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 8px;
  border: 1px solid rgba(0, 255, 159, 0.1);
}

.completion-stat label {
  color: rgba(0, 255, 159, 0.8);
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.completion-stat span {
  color: white;
  font-size: 1.5rem;
  font-weight: bold;
  text-shadow: 0 0 10px rgba(0, 255, 159, 0.5);
}

.puzzle-selector {
  position: relative;
  width: min(90vw, 1200px);
  max-height: 90vh;
  margin: 0 auto;
  padding: clamp(20px, 4vh, 30px);
  background: rgba(26, 26, 46, 0.95);
  border: 2px solid var(--hex-color);
  border-radius: clamp(10px, 2vw, 15px);
  overflow-y: auto;
  box-shadow: 
    0 0 20px rgba(var(--hex-color), 0.1),
    0 0 40px rgba(0, 0, 0, 0.3);
}

.puzzle-selector-title {
  color: var(--hex-color);
  text-align: center;
  margin-bottom: 2rem;
  font-size: clamp(1.5rem, 4vw, 2.5rem);
  text-shadow: 0 0 10px rgba(var(--hex-color), 0.5);
}

.puzzle-filters {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 12px;
  border: 1px solid rgba(var(--hex-color), 0.2);
  padding: 1rem;
  margin-bottom: 2rem;
  width: 100%;
  max-width: 600px;
  margin: 0 auto 2rem;
}

.difficulty-filters {
  display: flex;
  gap: 0.75rem;
  flex-wrap: wrap;
  justify-content: center;
}

.difficulty-filter {
  padding: 0.6rem 1.5rem;
  border-radius: 0.5rem;
  border: 2px solid rgba(var(--hex-color), 0.3);
  background: rgba(0, 0, 0, 0.3);
  color: #fff;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  min-width: 100px;
  text-align: center;
}

.difficulty-filter:hover {
  background: rgba(var(--hex-color), 0.1);
  border-color: rgba(var(--hex-color), 0.5);
  transform: translateY(-2px);
  box-shadow: 0 0 15px rgba(var(--hex-color), 0.2);
}

.difficulty-filter.active {
  background: rgba(var(--hex-color), 0.2);
  border-color: var(--hex-color);
  box-shadow: 
    0 0 15px rgba(var(--hex-color), 0.3),
    0 0 30px rgba(var(--hex-color), 0.1);
  transform: translateY(-2px);
}

.results-summary {
  text-align: center;
  margin: 1rem 0;
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.pagination-controls {
  margin-top: 2rem;
  padding: 1rem;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  border: 1px solid rgba(var(--hex-color), 0.2);
}

.pagination-controls button {
  padding: 0.5rem 1.5rem;
  border-radius: 0.5rem;
  border: 2px solid rgba(var(--hex-color), 0.3);
  background: rgba(0, 0, 0, 0.3);
  color: var(--hex-color);
  font-weight: bold;
  transition: all 0.2s ease;
}

.pagination-controls button:not(:disabled):hover {
  background: rgba(var(--hex-color), 0.1);
  transform: translateY(-2px);
  box-shadow: 0 0 15px rgba(var(--hex-color), 0.2);
}

.pagination-controls span {
  color: #fff;
  font-size: 1.1rem;
  text-shadow: 0 0 10px rgba(var(--hex-color), 0.3);
}

.puzzle-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: clamp(10px, 2vw, 20px);
  width: 100%;
  padding: 0.5rem;
}

.puzzle-card {
  position: relative;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 12px;
  overflow: hidden;
  transition: all 0.3s ease;
  cursor: pointer;
  border: 2px solid rgba(var(--hex-color), 0.2);
  padding: 0;
  width: 100%;
  aspect-ratio: 3/4;
  display: flex;
  flex-direction: column;
  text-align: left;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.puzzle-card:hover,
.puzzle-card:focus {
  transform: translateY(-4px);
  border-color: var(--hex-color);
  box-shadow: 
    0 0 20px rgba(var(--hex-color), 0.2),
    0 4px 8px rgba(0, 0, 0, 0.3);
}

.puzzle-preview {
  flex: 1;
  position: relative;
  overflow: hidden;
  background: rgba(0, 0, 0, 0.3);
  padding: 1rem;
}

.puzzle-preview img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  transition: transform 0.3s ease;
}

.puzzle-card:hover .puzzle-preview img {
  transform: scale(1.05);
}

.puzzle-info {
  padding: 1rem;
  background: rgba(0, 0, 0, 0.4);
  border-top: 1px solid rgba(var(--hex-color), 0.2);
}

.puzzle-info h3 {
  color: var(--hex-color);
  margin: 0 0 0.5rem 0;
  font-size: clamp(1rem, 2vw, 1.25rem);
  text-shadow: 0 0 10px rgba(var(--hex-color), 0.3);
}

.puzzle-info p {
  margin: 0.5rem 0 0 0;
  font-size: clamp(0.875rem, 1.5vw, 1rem);
  color: rgba(255, 255, 255, 0.8);
}

.difficulty {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.875rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 1px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.difficulty.easy {
  background: rgba(0, 255, 0, 0.2);
  color: #90ff90;
}

.difficulty.medium {
  background: rgba(255, 165, 0, 0.2);
  color: #ffd280;
}

.difficulty.hard {
  background: rgba(255, 0, 0, 0.2);
  color: #ff9090;
}

/* Enhance mobile responsiveness */
@media (max-width: 768px) {
  .puzzle-selector {
    width: 95vw;
    padding: clamp(15px, 3vh, 20px);
  }
  
  .puzzle-grid {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  }
  
  .puzzle-filters {
    padding: 1rem;
  }

  .difficulty-filters {
    gap: 0.5rem;
  }

  .difficulty-filter {
    padding: 0.5rem 1.2rem;
    min-width: 90px;
    font-size: 0.9rem;
  }
}

@media (max-width: 480px) {
  .puzzle-selector {
    width: 100vw;
    height: 100vh;
    max-height: none;
    border-radius: 0;
  }
  
  .puzzle-grid {
    grid-template-columns: 1fr;
  }
  
  .puzzle-filters {
    padding: 0.75rem;
  }

  .difficulty-filter {
    padding: 0.4rem 1rem;
    min-width: 80px;
    font-size: 0.8rem;
  }
}

/* High contrast mode for better accessibility */
@media (prefers-contrast: high) {
  .puzzle-card {
    border: 2px solid #fff;
  }
  
  .difficulty {
    border: 1px solid currentColor;
  }
}

/* Reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  .puzzle-card {
    transition: none;
  }
  
  .puzzle-card:hover,
  .puzzle-card:focus {
    transform: none;
  }
  
  .loading-placeholder {
    animation: none;
  }
}

/* Add keyboard focus styles */
.puzzle-card:focus-visible,
.difficulty-filter:focus-visible,
.pagination-controls button:focus-visible {
  outline: 3px solid var(--hex-color);
  outline-offset: 2px;
}

/* Update ring selector styles */
.ring-selector {
  background: rgba(0, 0, 0, 0.3);
  border-radius: 12px;
  border: 2px solid rgba(var(--hex-color), 0.2);
  padding: 1.5rem;
  margin: 2rem auto;
  width: 100%;
  max-width: 400px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  box-shadow: 
    0 0 20px rgba(var(--hex-color), 0.1),
    0 0 40px rgba(0, 0, 0, 0.3);
}

.ring-selector label {
  color: var(--hex-color);
  font-size: 1.1rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  text-shadow: 0 0 10px rgba(var(--hex-color), 0.3);
}

.ring-controls {
  display: flex;
  align-items: center;
  gap: 2rem;
  padding: 0.5rem;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  border: 1px solid rgba(var(--hex-color), 0.1);
}

.ring-controls button {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  border: 2px solid rgba(var(--hex-color), 0.3);
  background: rgba(0, 0, 0, 0.3);
  color: var(--hex-color);
  font-weight: bold;
  font-size: 1.5rem;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.ring-controls button:not(:disabled):hover {
  background: rgba(var(--hex-color), 0.1);
  transform: scale(1.1);
  box-shadow: 0 0 15px rgba(var(--hex-color), 0.2);
}

.ring-controls button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.ring-controls span {
  color: #fff;
  font-size: 1.2rem;
  min-width: 120px;
  text-align: center;
  text-shadow: 0 0 10px rgba(var(--hex-color), 0.3);
}

/* Add info text */
.ring-selector .info-text {
  color: rgba(255, 255, 255, 0.7);
  font-size: 0.9rem;
  text-align: center;
  margin-top: 0.5rem;
} 