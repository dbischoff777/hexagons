/* Base container with particles background */
.simon-mode {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  width: 100%;
  background: var(--theme-background);
  color: var(--theme-text);
  padding: clamp(10px, 2vw, 20px);
  position: relative;
  transform-style: preserve-3d;
  perspective: 1000px;
  contain: content;
  will-change: transform;
  transform: translateZ(0);
  overflow: hidden;
  /* Add max dimensions to prevent content overflow */
  max-width: 100vw;
  max-height: 100vh;
  box-sizing: border-box;
  isolation: isolate;
}

.simon-mode::before {
  content: '';
  position: absolute;
  inset: -50%;
  background: radial-gradient(
    circle at center,
    color-mix(in srgb, var(--theme-accent) 15%, transparent),
    color-mix(in srgb, var(--theme-accent) 5%, transparent) 45%,
    transparent 65%
  );
  opacity: 0.6;
  filter: blur(60px);
  mix-blend-mode: screen;
  pointer-events: none;
  animation: ambientGlow 8s ease-in-out infinite;
  z-index: -2;
}

.simon-mode::after {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    linear-gradient(
      45deg,
      transparent 0%,
      color-mix(in srgb, var(--theme-primary) 8%, transparent) 45%,
      color-mix(in srgb, var(--theme-primary) 4%, transparent) 65%,
      transparent 100%
    );
  opacity: 0.4;
  pointer-events: none;
  mix-blend-mode: overlay;
  animation: backgroundShift 15s ease-in-out infinite;
  z-index: -1;
}

@keyframes backgroundShift {
  0%, 100% {
    transform: scale(1.1) rotate(0deg);
  }
  25% {
    transform: scale(1.15) rotate(1deg);
  }
  50% {
    transform: scale(1.1) rotate(0deg);
  }
  75% {
    transform: scale(1.15) rotate(-1deg);
  }
}

@keyframes ambientGlow {
  0%, 100% {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1.1);
  }
}

.simon-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: min(800px, 90vw);
  margin-bottom: clamp(10px, 2vh, 20px);
  padding: clamp(10px, 2vh, 20px) clamp(15px, 3vw, 30px);
  z-index: 1;
}

.simon-stats {
  display: flex;
  gap: clamp(10px, 2vw, 20px);
}

.simon-score,
.simon-high-score {
  font-size: clamp(14px, 4vw, 24px);
  font-weight: bold;
  color: var(--theme-accent, #00FF9F);
  text-shadow: 
    0 0 10px var(--theme-accent, #00FF9F),
    0 0 20px var(--theme-secondary, #00FFFF);
  padding: clamp(8px, 1.5vh, 12px) clamp(12px, 2vw, 20px);
  border-radius: 8px;
  background: rgba(13, 13, 23, 0.95);
  border: 2px solid rgba(0, 255, 159, 0.2);
  box-shadow: 
    0 4px 20px rgba(0, 255, 159, 0.1),
    0 0 30px rgba(0, 0, 0, 0.2);
  transition: all 0.3s ease;
  transform-origin: center;
}

.simon-score:hover,
.simon-high-score:hover {
  transform: translateY(-2px) scale(1.02);
  border-color: rgba(0, 255, 159, 0.3);
  box-shadow: 
    0 6px 25px rgba(0, 255, 159, 0.15),
    0 0 35px rgba(0, 0, 0, 0.25);
  background: rgba(13, 13, 26, 0.7);
}

.simon-canvas {
  max-width: min(90vw, 90vh);
  max-height: min(65vh, 65vw);
  aspect-ratio: 1;
  margin: clamp(10px, 2vh, 20px) 0;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform-style: preserve-3d;
  will-change: transform;
  position: relative;
}

.simon-canvas::before {
  content: '';
  position: absolute;
  inset: -2px;
  z-index: -1;
}

.simon-controls {
  display: flex;
  gap: min(20px, 2vw);
  margin-top: min(20px, 2vh);
  z-index: 1;
}

.simon-start-button,
.simon-exit-button {
  padding: min(12px, 1.5vh) min(24px, 2.5vw);
  font-size: clamp(16px, 1.8vw, 18px);
  font-weight: bold;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
  background: rgba(13, 13, 23, 0.95);
  border: 2px solid var(--theme-accent, #00FF9F);
  color: var(--theme-accent, #00FF9F);
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.2),
    0 0 10px rgba(0, 255, 159, 0.3),
    inset 0 0 15px rgba(0, 255, 159, 0.2);
  text-shadow: 0 0 8px var(--theme-accent, #00FF9F);
}

.simon-start-button:disabled,
.simon-exit-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  border-color: var(--theme-secondary, #666666);
  color: var(--theme-secondary, #666666);
  box-shadow: none;
  text-shadow: none;
  pointer-events: none;
}

.simon-start-button:disabled::before,
.simon-exit-button:disabled::before {
  display: none;
}

.simon-start-button::before,
.simon-exit-button::before {
  content: '';
  position: absolute;
  inset: -1px;
  border-radius: 8px;
  padding: 1px;
  background: linear-gradient(
    45deg,
    transparent 40%,
    var(--theme-accent, #00FF9F),
    transparent 60%
  );
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0.5;
  animation: borderGlow 3s linear infinite;
}

@keyframes borderGlow {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 200% 50%;
  }
}

.simon-start-button:hover,
.simon-exit-button:hover {
  transform: translateY(-2px);
  background: rgba(20, 20, 35, 0.95);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.3),
    0 0 15px rgba(0, 255, 159, 0.4),
    inset 0 0 20px rgba(0, 255, 159, 0.3);
}

.simon-exit-button {
  border-color: var(--theme-secondary, #00FFFF);
  color: var(--theme-secondary, #00FFFF);
  text-shadow: 0 0 8px var(--theme-secondary, #00FFFF);
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.2),
    0 0 10px rgba(0, 255, 255, 0.3),
    inset 0 0 15px rgba(0, 255, 255, 0.2);
}

.simon-exit-button::before {
  background: linear-gradient(
    45deg,
    transparent 40%,
    var(--theme-secondary, #00FFFF),
    transparent 60%
  );
}

.simon-exit-button:hover {
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.3),
    0 0 15px rgba(0, 255, 255, 0.4),
    inset 0 0 20px rgba(0, 255, 255, 0.3);
}

/* Game state feedback animations */
.simon-mode.feedback-success::after {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at center,
    rgba(0, 255, 159, 0.3) 0%,
    rgba(0, 255, 159, 0.1) 50%,
    transparent 70%
  );
  pointer-events: none;
  animation: successFeedback 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 10;
}

.simon-mode.feedback-error::after {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at center,
    rgba(255, 17, 119, 0.3) 0%,
    rgba(255, 17, 119, 0.1) 50%,
    transparent 70%
  );
  pointer-events: none;
  animation: errorFeedback 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 10;
}

@keyframes successFeedback {
  0% {
    opacity: 0;
    transform: scale(0.8);
    backdrop-filter: blur(0px);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
    backdrop-filter: blur(2px);
  }
  100% {
    opacity: 0;
    transform: scale(1);
    backdrop-filter: blur(0px);
  }
}

@keyframes errorFeedback {
  0% {
    opacity: 0;
    transform: scale(0.8);
    backdrop-filter: blur(0px);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
    backdrop-filter: blur(4px);
  }
  100% {
    opacity: 0;
    transform: scale(1);
    backdrop-filter: blur(0px);
  }
}

/* Sequence showing animation */
.simon-mode.showing-sequence .simon-canvas {
  box-shadow: 
    0 0 50px var(--theme-accent, #00FF9F),
    0 0 100px rgba(0, 255, 159, 0.2),
    inset 0 0 30px rgba(0, 255, 159, 0.1);
  animation: showSequence 2s ease infinite;
  border-color: rgba(0, 255, 159, 0.4);
}

.showing-sequence .simon-tile.current {
  animation: showTile 0.5s ease infinite;
  box-shadow: 
    0 0 30px currentColor,
    0 0 60px currentColor,
    inset 0 0 20px currentColor;
}

@keyframes showTile {
  0%, 100% {
    transform: translateZ(0);
    filter: brightness(1);
    box-shadow: 
      0 0 30px currentColor,
      0 0 60px currentColor,
      inset 0 0 20px currentColor;
  }
  50% {
    transform: translateZ(20px);
    filter: brightness(1.3);
    box-shadow: 
      0 0 50px currentColor,
      0 0 100px currentColor,
      inset 0 0 30px currentColor;
  }
}

/* Game over animation */
.simon-mode.game-over .simon-canvas {
  animation: gameOver 1s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes gameOver {
  0% {
    transform: scale(1) translateZ(0);
    filter: brightness(1) blur(0px);
    border-color: rgba(255, 17, 119, 0.2);
  }
  25% {
    transform: scale(1.1) translateZ(20px);
    filter: brightness(0.5) blur(2px);
    border-color: rgba(255, 17, 119, 0.4);
  }
  50% {
    transform: scale(0.9) translateZ(-10px);
    filter: brightness(1.5) blur(0px);
    border-color: rgba(255, 17, 119, 0.6);
  }
  75% {
    transform: scale(1.05) translateZ(10px);
    filter: brightness(0.7) blur(1px);
    border-color: rgba(255, 17, 119, 0.4);
  }
  100% {
    transform: scale(1) translateZ(0);
    filter: brightness(1) blur(0px);
    border-color: rgba(255, 17, 119, 0.2);
  }
}

/* Enhanced tile animations */
@keyframes tileActivate {
  0% {
    transform: scale(1) translateZ(0);
    filter: brightness(1) blur(0px);
    box-shadow: 
      0 0 20px currentColor,
      0 0 40px currentColor,
      inset 0 0 10px currentColor;
  }
  25% {
    transform: scale(1.15) translateZ(20px);
    filter: brightness(1.5) blur(2px);
    box-shadow: 
      0 0 40px currentColor,
      0 0 80px currentColor,
      inset 0 0 20px currentColor;
  }
  50% {
    transform: scale(1.1) translateZ(15px);
    filter: brightness(1.3) blur(1px);
    box-shadow: 
      0 0 30px currentColor,
      0 0 60px currentColor,
      inset 0 0 15px currentColor;
  }
  100% {
    transform: scale(1) translateZ(0);
    filter: brightness(1) blur(0px);
    box-shadow: 
      0 0 20px currentColor,
      0 0 40px currentColor,
      inset 0 0 10px currentColor;
  }
}

.simon-tile {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  transform-style: preserve-3d;
}

.simon-tile::before {
  content: '';
  position: absolute;
  inset: 0;
  background: currentColor;
  opacity: 0;
  transition: opacity 0.2s ease;
  border-radius: inherit;
  filter: blur(8px);
}

.simon-tile.active {
  animation: tileActivate 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.simon-tile.active::before {
  opacity: 0.4;
  animation: tileGlow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes tileGlow {
  0% {
    opacity: 0;
    transform: scale(1);
    filter: blur(8px);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.2);
    filter: blur(12px);
  }
  100% {
    opacity: 0.4;
    transform: scale(1);
    filter: blur(8px);
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .simon-header {
    flex-direction: column;
    gap: clamp(8px, 1.5vh, 15px);
    padding: clamp(8px, 1.5vh, 12px) clamp(12px, 2.5vw, 25px);
    max-width: min(800px, 85vw);
  }

  .simon-stats {
    flex-direction: column;
    gap: clamp(5px, 1vh, 10px);
    align-items: center;
    width: 100%;
  }

  .simon-score,
  .simon-high-score {
    font-size: clamp(14px, 3.5vw, 18px);
    padding: clamp(6px, 1vh, 8px) clamp(10px, 2vw, 16px);
    width: 90%;
    text-align: center;
  }

  .simon-canvas {
    max-width: min(85vw, 85vh);
    max-height: min(55vh, 85vw);
    margin: clamp(8px, 1.5vh, 15px) 0;
  }

  .simon-controls {
    flex-direction: column;
    gap: clamp(8px, 1.5vh, 15px);
    width: 85%;
    padding: 0;
  }

  .simon-start-button,
  .simon-exit-button {
    width: 100%;
    padding: clamp(8px, 1.5vh, 10px) clamp(15px, 2.5vw, 20px);
    font-size: clamp(14px, 3.5vw, 16px);
  }
}

/* Add specific adjustments for very small devices */
@media (max-width: 412px) {
  .simon-mode {
    padding: clamp(5px, 1.5vw, 8px);
  }

  .simon-header {
    max-width: min(800px, 82vw);
    padding: clamp(6px, 1.2vh, 10px) clamp(10px, 2vw, 20px);
    margin-bottom: clamp(5px, 1vh, 8px);
  }

  .simon-score,
  .simon-high-score {
    font-size: clamp(12px, 3vw, 14px);
    padding: clamp(5px, 1vh, 8px) clamp(8px, 1.5vw, 12px);
    width: 85%;
  }

  .simon-canvas {
    max-width: min(82vw, 82vh);
    max-height: min(45vh, 82vw);
    margin: clamp(5px, 1vh, 8px) 0;
  }

  .simon-controls {
    width: 82%;
    gap: clamp(5px, 1vh, 10px);
  }

  .simon-start-button,
  .simon-exit-button {
    width: 90%;
    margin: 0 auto;
    padding: clamp(6px, 1.2vh, 8px) clamp(12px, 2vw, 15px);
    font-size: clamp(12px, 3vw, 14px);
  }
}

/* Add orientation-specific adjustments */
@media (max-height: 600px) and (orientation: landscape) {
  .simon-header {
    max-width: min(800px, 90vw);
    padding: clamp(5px, 1vh, 8px) clamp(8px, 1.5vw, 15px);
  }

  .simon-canvas {
    max-height: min(75vh, 45vw);
    max-width: min(75vh, 45vw);
  }

  .simon-controls {
    width: auto;
    padding: 0;
    gap: clamp(8px, 1.5vw, 15px);
  }

  .simon-start-button,
  .simon-exit-button {
    width: auto;
    min-width: 100px;
    padding: clamp(5px, 1vh, 8px) clamp(10px, 1.5vw, 15px);
  }
}

/* High contrast mode support */
@media (forced-colors: active) {
  .simon-mode {
    forced-color-adjust: none;
  }

  .simon-canvas {
    border: 2px solid CanvasText;
  }

  .simon-start-button,
  .simon-exit-button {
    border: 2px solid ButtonText;
    background: ButtonFace;
    color: ButtonText;
  }
}

/* Add focus styles for keyboard navigation */
.simon-canvas:focus {
  outline: none;
  border-color: var(--theme-accent, #00FF9F);
  box-shadow: 
    0 0 0 3px var(--theme-accent, #00FF9F),
    0 0 30px rgba(0, 255, 159, 0.3);
}

/* Accessibility helper */
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Add pattern styles for colorblind mode */
.pattern-0 {
  background-image: repeating-linear-gradient(45deg, transparent, transparent 5px, rgba(255, 255, 255, 0.1) 5px, rgba(255, 255, 255, 0.1) 10px);
}

.pattern-1 {
  background-image: repeating-linear-gradient(-45deg, transparent, transparent 5px, rgba(255, 255, 255, 0.1) 5px, rgba(255, 255, 255, 0.1) 10px);
}

.pattern-2 {
  background-image: repeating-linear-gradient(90deg, transparent, transparent 5px, rgba(255, 255, 255, 0.1) 5px, rgba(255, 255, 255, 0.1) 10px);
}

.pattern-3 {
  background-image: radial-gradient(circle, transparent 5px, rgba(255, 255, 255, 0.1) 5px, rgba(255, 255, 255, 0.1) 10px, transparent 10px);
  background-size: 20px 20px;
}

.pattern-4 {
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 75%, rgba(255, 255, 255, 0.1) 75%);
  background-size: 20px 20px;
}

.pattern-5 {
  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.1) 50%, transparent 50%);
  background-size: 20px 100%;
}

.pattern-6 {
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 50%, transparent 50%);
  background-size: 100% 20px;
}

/* Add tile label styles */
.tile-label {
  position: absolute;
  font-size: 14px;
  color: var(--text-light);
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.5);
  pointer-events: none;
  user-select: none;
}

/* Add responsive focus styles */
@media (max-width: 768px) {
  .simon-canvas:focus {
    box-shadow: 0 0 0 5px var(--focus-color);
  }
  
  .tile-label {
    font-size: 12px;
  }
}

/* Add high contrast mode styles */
@media (forced-colors: active) {
  .simon-tile {
    forced-color-adjust: none;
    border: 2px solid CanvasText;
  }
  
  .simon-tile.active {
    border-width: 4px;
  }
  
  .simon-canvas:focus {
    outline: 2px solid Highlight;
  }
}

/* Success animation */
@keyframes success {
  0% {
    transform: scale(1);
    filter: brightness(1) hue-rotate(0deg);
  }
  50% {
    transform: scale(1.05);
    filter: brightness(1.2) hue-rotate(180deg);
  }
  100% {
    transform: scale(1);
    filter: brightness(1) hue-rotate(360deg);
  }
}

.simon-mode.success .simon-canvas {
  animation: success 0.8s ease;
}

/* Add overflow control to game-over controls */
.simon-game-over-controls {
  display: flex;
  flex-direction: column;
  gap: clamp(8px, 1.5vh, 15px);
  width: 100%;
  max-width: min(300px, 90%);
  margin: 0 auto;
}

.simon-difficulty {
  display: flex;
  align-items: center;
  gap: clamp(8px, 1.5vw, 15px);
  padding: clamp(5px, 1vh, 8px);
  border-radius: 8px;
  background: rgba(13, 13, 23, 0.8);
  border: 2px solid rgba(0, 255, 159, 0.2);
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.2),
    0 0 10px rgba(0, 255, 159, 0.2),
    inset 0 0 15px rgba(0, 255, 159, 0.1);
}

.simon-difficulty label {
  color: var(--theme-text);
  font-size: clamp(14px, 1.6vw, 16px);
  font-weight: 600;
  text-shadow: 0 0 8px var(--theme-accent);
  white-space: nowrap;
}

.simon-difficulty select {
  background: rgba(13, 13, 23, 0.95);
  color: var(--theme-accent);
  border: 2px solid var(--theme-accent);
  border-radius: 6px;
  padding: clamp(4px, 0.8vh, 8px) clamp(8px, 1.2vw, 12px);
  font-size: clamp(14px, 1.6vw, 16px);
  cursor: pointer;
  outline: none;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-shadow: 0 0 8px var(--theme-accent);
  box-shadow: 
    0 2px 10px rgba(0, 0, 0, 0.2),
    0 0 8px rgba(0, 255, 159, 0.2);
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12' fill='none'%3E%3Cpath d='M2 4L6 8L10 4' stroke='%2300FF9F' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 8px center;
  padding-right: 28px;
}

.simon-difficulty select:hover {
  border-color: rgba(0, 255, 159, 0.6);
  background-color: rgba(20, 20, 35, 0.95);
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.3),
    0 0 12px rgba(0, 255, 159, 0.3);
  transform: translateY(-1px);
}

.simon-difficulty select:focus {
  border-color: rgba(0, 255, 159, 0.8);
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.4),
    0 0 15px rgba(0, 255, 159, 0.4),
    inset 0 0 10px rgba(0, 255, 159, 0.1);
}

.simon-difficulty select:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  border-color: rgba(0, 255, 159, 0.2);
  box-shadow: none;
  transform: none;
}

.simon-difficulty select option {
  background: rgba(13, 13, 23, 0.95);
  color: var(--theme-accent);
  padding: 8px;
}

/* Add responsive styles for the difficulty selector */
@media (max-width: 768px) {
  .simon-difficulty {
    width: 90%;
    margin: 0 auto;
    justify-content: center;
  }
  
  .simon-difficulty select {
    flex: 1;
    max-width: 150px;
  }
}

@media (max-width: 412px) {
  .simon-difficulty {
    width: 85%;
    padding: clamp(4px, 0.8vh, 6px);
  }
  
  .simon-difficulty label {
    font-size: clamp(12px, 3vw, 14px);
  }
  
  .simon-difficulty select {
    font-size: clamp(12px, 3vw, 14px);
    padding: clamp(3px, 0.6vh, 6px) clamp(6px, 1vw, 10px);
    max-width: 120px;
  }
} 