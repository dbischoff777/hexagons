/* Tile container styles */
.next-tiles-container {
  width: clamp(80px, 12vw, 100px);  /* Responsive but constrained width */
  min-height: min(200px, 50vh); /* Responsive height */
  position: absolute;
  right: max(20px, 3vw); /* Minimum spacing from right edge */
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  gap: clamp(8px, 1.2vh, 15px);
  align-items: center;
  pointer-events: all;
  /* Ensure container stays within game board */
  max-width: 15%;
  z-index: 10;
}

/* Mobile layout */
@media (max-width: 768px) {
  .next-tiles-container {
    position: relative;
    top: auto;
    right: auto;
    width: 100%;
    min-height: auto;
    max-width: min(95vw, 95vh);
    transform: rotate(90deg); /* Rotate the entire container */
    padding: 10px;
    margin: 20px auto 0;
    display: flex;
    flex-direction: column; /* Keep column direction since we're rotating container */
    justify-content: center;
    background: transparent;
    border: none;
  }

  .next-tiles {
    flex-direction: column; /* Keep column direction */
    gap: 10px;
    margin: 0;
  }

  /* Remove individual tile rotations */
  .next-tile {
    transform: none;
    width: clamp(40px, 12vw, 60px);
    height: clamp(40px, 12vw, 60px);
  }

  .next-tile.selected {
    transform: scale(1.1); /* Just scale, no rotation */
  }

  .next-tile:hover {
    transform: scale(1.05); /* Just scale, no rotation */
  }
}

.next-tiles {
  display: flex;
  flex-direction: column;
  gap: clamp(5px, 2.5vh, 10px);
  align-items: center;
  margin-bottom: clamp(10px, 2vh, 20px);
}

.next-tile {
  position: relative;
  width: clamp(60px, 10vw, 100px);
  height: clamp(60px, 10vw, 100px);
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.2s ease;
}

.next-tile canvas { 
  width: 100%;
  height: 100%;
  border-radius: 50%;
  box-shadow: 0 0 clamp(8px, 1.5vw, 15px) rgba(0, 255, 159, 0.2);
  pointer-events: none;
}

.next-tile.selected canvas {
  box-shadow: 0 0 clamp(15px, 2vw, 25px) rgba(0, 255, 159, 0.4);
}

/* Position the undo button */
.undo-button {
  margin-top: auto;
  width: 100%;
  max-width: 90px;
}

/* Tile animations */
@keyframes tilePlace {
  0% {
    transform: scale(1.3) rotate(-10deg);
    filter: brightness(2);
  }
  50% {
    transform: scale(0.9) rotate(5deg);
  }
  100% {
    transform: scale(1) rotate(0);
    filter: brightness(1);
  }
}

@keyframes tileRemove {
  0% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.3) rotate(180deg);
    filter: brightness(2);
  }
  100% {
    transform: scale(0) rotate(360deg);
    filter: brightness(3);
  }
}

/* Tile state classes */
.tile-placed {
  animation: tilePlace 0.3s ease-out;
}

.tile-removed {
  animation: tileRemove 0.5s ease-in forwards;
}

/* Tile matching effects */
.tile-matched, .tile-was-matched {
  filter: brightness(1.2);
  box-shadow: 
    0 0 clamp(10px, 2vw, 20px) rgba(0, 255, 159, 0.4),
    inset 0 0 clamp(5px, 1vw, 10px) rgba(0, 255, 159, 0.2);
  transform-style: preserve-3d;
  will-change: transform;
}

.tile-matched::after,
.tile-was-matched::after {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  background: radial-gradient(circle at center, rgba(0, 255, 159, 0.2), transparent 70%);
  pointer-events: none;
}

/* Power-up tile styles */
.tile-powerup {
  position: relative;
}

.tile-powerup::before {
  content: '';
  position: absolute;
  inset: -4px;
  border-radius: inherit;
  background: linear-gradient(45deg, 
    rgba(0, 255, 159, 0.4),
    rgba(0, 255, 255, 0.4)
  );
  z-index: -1;
  animation: powerupGlow 2s ease-in-out infinite;
}

@keyframes powerupGlow {
  0%, 100% {
    opacity: 0.4;
    transform: scale(1);
  }
  50% {
    opacity: 0.6;
    transform: scale(1.05);
  }
}